amlModuleIdentifier:
  moduleName: QA Train
  moduleVersion: 0.0.1
  namespace: microsoft.com/azureml/samples
metadata:
  annotations:
    tags:
    - Machine Learning\Train
description: Trains a Bert/Xlnet model in a supervised manner
inputs:
- name: Train data file
  type: AnyDirectory
  description: Training data
- name: Model type
  default: bert
  type: String
  description: Model type
- name: Model name
  default: bert-large-uncased-whole-word-masking
  type: String
  description: Model name
- name: Max seq Length
  default: 50
  type: Int
  description: Max seq length
- name: Max query Length
  default: 50
  type: Int
  description: Max query length
- name: Max answer Length
  default: 50
  type: Int
  description: Max answer length
- name: Batch size
  default: 32
  type: Int
  description: Batch size
- name: Learning rate
  default: 0.1
  type: Float
  description: Learning rate
- name: Epoch num
  default: 1
  type: Int
  description: Epoch num
outputs:
- name: Trained model
  type: ModelDirectory
  description: Trained learner
implementation:
  container:
    amlEnvironment:
      docker:
        baseImage: mcr.microsoft.com/azureml/base-gpu:intelmpi2018.3-cuda10.0-cudnn7-ubuntu16.04
      python:
        condaDependencies:
          name: project_environment
          channels:
          - defaults
          dependencies:
          - python=3.6.8
          - pip:
            - azureml-designer-core==0.0.33
            - pandas==0.24.1
            - tensorboardX==1.8
            - pytorch-transformers==1.0.0
            - torch==1.3
            - torchvision==0.4.1
    command: [python, examples/train.py]
    args: [
      --model_type, {inputValue: Model type},
      --model_name_or_path, {inputValue: Model name},
      --max_seq_length, {inputValue: Max seq length},
      --max_query_length, {inputValue: Max query length},
      --max_answer_length, {inputValue: Max answer length},
      --train_file, {inputPath: Train data file},
      --learning_rate, {inputValue: Learning rate},
      --num_train_epochs, {inputValue: Epoch num},
      --per_gpu_train_batch_size, {inputValue: Batch size},
      --output_dir, {outputPath: Trained model},
    ]
